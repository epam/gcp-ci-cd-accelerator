# Copyright 2023 EPAM Systems
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: Release Version Update
    name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |

        increment_version() {
        local delimiter=.
        local array=($(echo "$1" | tr $delimiter '\n'))
        array[$2]=$((array[$2]+1))
        if [ $2 -lt 2 ]; then array[2]=0; fi
        if [ $2 -lt 1 ]; then array[1]=0; fi
        echo $(local IFS=$delimiter ; echo "${array[*]}")
        }
  
        export DEBCONF_NOWARNINGS=yes
        apt-get update -yqq > /dev/null
        apt-get install unzip jq -yqq > /dev/null
  
        echo "Getting Previous Release Version ..."
  
        PREV_NAME=$(
          curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $$GIT_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$_REPOSITORY/releases/latest \
            | jq -r '.tag_name' | tr -d v 2> /dev/null
        )
        
        echo "Checking Release Version ..."
        
        TAG_NAME=$_TAG_NAME
        TAG_NAME=$${TAG_NAME//v}
        [[ ! $$PREV_NAME =~ ^[0-9]+\.[0-9]+\.[0-9] ]] && [[ -z "$${TAG_NAME// }" ]] \
        && echo "Incorrect git tag!" && exit 1
        
        echo "Updating Release Version ..."
        [[ -z $$TAG_NAME ]] && TAG_NAME=$(increment_version $$PREV_NAME 2)

        echo -n "New Release Version " && echo $$TAG_NAME | tee /workspace/version_tag

    entrypoint: bash
    secretEnv:
      - GIT_TOKEN

  - id: Create New Release
    name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        
        echo "Checking Release Version ..."

        TAG_NAME=$(cat /workspace/version_tag) || TAG_NAME=$_TAG_NAME
        TAG_NAME=$${TAG_NAME//v}

        [[ -z "$${TAG_NAME// }" ]] && [[ ! -f /workspace/version_tag ]] \
        && echo "Incorrect git tag!" && exit 1

        echo "Creating Release ..."

        curl -sL \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $$GIT_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/$_REPOSITORY/releases \
          -d @- <<EOF
          {"tag_name":"v$$TAG_NAME","target_commitish":"$_TARGET_COMMITISH","name":"v$$TAG_NAME","body":"$_DESCRIPTION","draft":false,"prerelease":$_PRERELEASE,"make_latest":"$_MAKE_LATEST","generate_release_notes":$_GENERATE_NOTES}
        EOF

    entrypoint: bash
    secretEnv:
      - GIT_TOKEN

substitutions:
  _TAG_NAME: ''
  _DRAFT: 'false'
  _SECRET: 'git-token'
  _MAKE_LATEST: 'true'
  _PRERELEASE: 'false'
  _GENERATE_NOTES: 'true'
  _DESCRIPTION: 'New Release'
  _TARGET_COMMITISH: $BRANCH_NAME
  _REPOSITORY: $REPO_FULL_NAME

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/$_SECRET/versions/latest
      env: GIT_TOKEN

options:
  logging: GCS_ONLY
logsBucket: gs://$_LOGS_BUCKET

serviceAccount: projects/$_PROJECT_ID/serviceAccounts/$_SERVICE_ACCOUNT
