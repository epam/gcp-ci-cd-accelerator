# Copyright 2023 EPAM Systems
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: Prepare Gitops
    name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        
        curl -sLO \
        'https://github.com/mikefarah/yq/releases/download/v4.30.5/yq_linux_amd64.tar.gz'
        tar -xzf yq_linux_amd64.tar.gz && mv yq_linux_amd64 /usr/bin/yq

        git clone --single-branch --branch $_BRANCH_NAME --depth 1 \
          https://$$GIT_TOKEN@$_GITOPS_REPO gitops

        if [ $_ENVIRONMENT != "prod" ]; then

          mkdir -p /workspace/gitops/non-prod/$_APP_NAME-$_ENV_NAME
          cp -avr /workspace/gitops/example/* \
                  /workspace/gitops/non-prod/$_APP_NAME-$_ENV_NAME
                
          for SERVICE in $(ls /workspace/gitops/example | cut -d "/" -f1 ); do
            [[ "$$SERVICE" == "redis" ]] && continue
          
            cd /workspace/gitops/non-prod/$_APP_NAME-$_ENV_NAME/$$SERVICE
          
            echo "Updating $$SERVICE"
            yq -i 'with(select(.kind=="Deployment"); .spec.template.spec.containers[0].image |= "$_IMAGE_REPO/'$$SERVICE':0.0.1")' \
              $$SERVICE.yaml
          done
        
        else

          mkdir -p /workspace/gitops/prod/$_APP_NAME
          cp -avr /workspace/gitops/example/* \
                  /workspace/gitops/prod/$_APP_NAME
                
          for SERVICE in $(ls /workspace/gitops/example | cut -d "/" -f1 ); do
            [[ "$$SERVICE" == "redis" ]] && continue

            cd /workspace/gitops/prod/$_APP_NAME/$$SERVICE
            echo "Updating $$SERVICE"
          
            yq -i 'with(select(.kind=="Deployment"); .spec.template.spec.containers[0].image |= "$_IMAGE_REPO/'$$SERVICE':0.0.1")' \
              $$SERVICE.yaml

            yq -i 'with(select(.kind=="Deployment"); .spec.replicas |= 3)' \
              $$SERVICE.yaml
          done

        fi

        cd /workspace/gitops
        echo "Pushing changes to gitops repo ..."
        git config --global user.name $_ORG_NAME
        git config --global user.email $_ORG_NAME@gmail.com
        git status && git add . && git commit -a -m \
          "project $_PROJECT_ID is ready for gitops" || true

        sleep $((RANDOM % 10)) && git pull --rebase origin && git push origin || true
    entrypoint: bash
    secretEnv:
      - GIT_TOKEN

substitutions:
  _PROJECT_ID: ''
  _ORG_NAME: ''
  _ENV_NAME: ''
  _APP_NAME: ''
  _IMAGE_REPO: ''
  _GITOPS_REPO: ''
  _BRANCH_NAME: ''
  _ENVIRONMENT: ''
  _LOGS_BUCKET: ''
  _SERVICE_ACCOUNT : ''

options:
  logging: GCS_ONLY
logsBucket: gs://$_LOGS_BUCKET

serviceAccount: projects/$_PROJECT_ID/serviceAccounts/$_SERVICE_ACCOUNT

availableSecrets:
  secretManager:
    - versionName: projects/$_PROJECT_ID/secrets/git-token/versions/latest
      env: GIT_TOKEN
